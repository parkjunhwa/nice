/* ===== 반응형 믹스인 ===== */

@mixin mobile {
  @media (max-width: 767px) { @content; }
}

@mixin tablet {
  @media (min-width: 768px) and (max-width: 1023px) { @content; }
}

@mixin desktop {
  @media (min-width: 1024px) { @content; }
}

@mixin mobile-up {
  @media (min-width: 768px) { @content; }
}

@mixin tablet-up {
  @media (min-width: 1024px) { @content; }
}

@mixin desktop-up {
  @media (min-width: 1280px) { @content; }
}

@mixin mobile-only {
  @media (max-width: 767px) { @content; }
}

@mixin tablet-only {
  @media (min-width: 768px) and (max-width: 1023px) { @content; }
}

@mixin desktop-only {
  @media (min-width: 1024px) and (max-width: 1279px) { @content; }
}

@mixin wide-only {
  @media (min-width: 1280px) { @content; }
}

/* ===== 레이아웃 믹스인 ===== */

@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-col-center {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

@mixin flex-col-start {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
}

@mixin flex-col-end {
  display: flex;
  flex-direction: column;
  align-items: flex-end;
}

@mixin flex-row-start {
  display: flex;
  align-items: center;
  justify-content: flex-start;
}

@mixin flex-row-end {
  display: flex;
  align-items: center;
  justify-content: flex-end;
}

@mixin flex-row-around {
  display: flex;
  align-items: center;
  justify-content: space-around;
}

@mixin flex-row-evenly {
  display: flex;
  align-items: center;
  justify-content: space-evenly;
}

@mixin grid-center {
  display: grid;
  place-items: center;
}

@mixin grid-fit($min-width: 250px) {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax($min-width, 1fr));
}

@mixin grid-fill($min-width: 250px) {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax($min-width, 1fr));
}

/* ===== 포커스 및 접근성 믹스인 ===== */

@mixin focus-ring {
  outline: 2px solid hsl(var(--color-ring));
  outline-offset: 2px;
}

@mixin focus-visible {
  &:focus-visible {
    @include focus-ring;
  }
}

@mixin focus-ring-inset {
  outline: 2px solid hsl(var(--color-ring));
  outline-offset: -2px;
}

@mixin focus-ring-offset($offset: 2px) {
  outline: 2px solid hsl(var(--color-ring));
  outline-offset: $offset;
}

@mixin sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

@mixin not-sr-only {
  position: static;
  width: auto;
  height: auto;
  padding: 0;
  margin: 0;
  overflow: visible;
  clip: auto;
  white-space: normal;
}

/* ===== 트랜지션 및 애니메이션 믹스인 ===== */

@mixin transition-base {
  transition: all var(--duration-200) var(--ease-in-out);
}

@mixin transition-fast {
  transition: all var(--duration-100) var(--ease-in-out);
}

@mixin transition-slow {
  transition: all var(--duration-300) var(--ease-in-out);
}

@mixin transition-property($properties...) {
  transition-property: $properties;
  transition-duration: var(--duration-200);
  transition-timing-function: var(--ease-in-out);
}

@mixin transition-transform {
  transition: transform var(--duration-200) var(--ease-out);
}

@mixin transition-opacity {
  transition: opacity var(--duration-200) var(--ease-in-out);
}

@mixin transition-colors {
  transition: color var(--duration-200) var(--ease-in-out),
              background-color var(--duration-200) var(--ease-in-out),
              border-color var(--duration-200) var(--ease-in-out);
}

@mixin transition-shadow {
  transition: box-shadow var(--duration-200) var(--ease-in-out);
}

@mixin hover-lift {
  @include transition-transform;
  
  &:hover {
    transform: translateY(-2px);
  }
}

@mixin hover-scale($scale: 1.05) {
  @include transition-transform;
  
  &:hover {
    transform: scale($scale);
  }
}

@mixin hover-rotate($degrees: 5deg) {
  @include transition-transform;
  
  &:hover {
    transform: rotate($degrees);
  }
}

/* ===== 그림자 믹스인 ===== */

@mixin shadow-none {
  box-shadow: var(--shadow-none);
}

@mixin shadow-xs {
  box-shadow: var(--shadow-xs);
}

@mixin shadow-sm {
  box-shadow: var(--shadow-sm);
}

@mixin shadow-base {
  box-shadow: var(--shadow-base);
}

@mixin shadow-md {
  box-shadow: var(--shadow-md);
}

@mixin shadow-lg {
  box-shadow: var(--shadow-lg);
}

@mixin shadow-xl {
  box-shadow: var(--shadow-xl);
}

@mixin shadow-2xl {
  box-shadow: var(--shadow-2xl);
}

@mixin shadow-inner {
  box-shadow: var(--shadow-inner);
}

@mixin shadow-hover($base-shadow: var(--shadow-sm), $hover-shadow: var(--shadow-md)) {
  box-shadow: $base-shadow;
  @include transition-shadow;
  
  &:hover {
    box-shadow: $hover-shadow;
  }
}

/* ===== 타이포그래피 믹스인 ===== */

@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin text-balance {
  text-wrap: balance;
}

@mixin text-pretty {
  text-wrap: pretty;
}

@mixin text-ellipsis($lines: 1) {
  @if $lines == 1 {
    @include text-truncate;
  } @else {
    display: -webkit-box;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis;
  }
}

@mixin text-gradient($gradient) {
  background: $gradient;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

@mixin font-smoothing {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/* ===== 색상 믹스인 ===== */

@mixin color-scheme($bg-color, $text-color) {
  background-color: $bg-color;
  color: $text-color;
}

@mixin hover-color($bg-color, $text-color) {
  @include transition-colors;
  
  &:hover {
    background-color: $bg-color;
    color: $text-color;
  }
}

@mixin active-color($bg-color, $text-color) {
  &:active {
    background-color: $bg-color;
    color: $text-color;
  }
}

@mixin focus-color($bg-color, $text-color) {
  &:focus {
    background-color: $bg-color;
    color: $text-color;
  }
}

/* ===== 컴포넌트별 믹스인 ===== */

/* 카드 믹스인 */
@mixin card-base {
  background-color: hsl(var(--color-bg-elevated));
  border: 1px solid hsl(var(--color-border));
  border-radius: var(--card-border-radius);
  padding: var(--card-padding);
  @include shadow-hover(var(--card-shadow), var(--card-shadow-hover));
}

@mixin card-variant($variant: 'default') {
  @if $variant == 'elevated' {
    @include shadow-md;
    
    &:hover {
      @include shadow-lg;
    }
  } @else if $variant == 'bordered' {
    border-width: 2px;
  } @else if $variant == 'ghost' {
    border: none;
    background-color: transparent;
    box-shadow: none;
  }
}

/* 버튼 믹스인 */
@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: var(--space-2);
  border-radius: var(--radius-base);
  font-weight: var(--font-weight-medium);
  font-size: var(--font-size-sm);
  @include transition-base;
  cursor: pointer;
  border: none;
  text-decoration: none;
  @include focus-visible;
  
  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }
}

@mixin button-size($size: 'base') {
  @if $size == 'sm' {
    height: var(--button-height-sm);
    padding: 0 var(--button-padding-x-sm);
    font-size: var(--font-size-xs);
  } @else if $size == 'base' {
    height: var(--button-height-base);
    padding: 0 var(--button-padding-x-base);
    font-size: var(--font-size-sm);
  } @else if $size == 'lg' {
    height: var(--button-height-lg);
    padding: 0 var(--button-padding-x-lg);
    font-size: var(--font-size-base);
  }
}

@mixin button-variant($variant: 'primary') {
  @if $variant == 'primary' {
    background-color: hsl(var(--color-primary));
    color: hsl(var(--color-primary-foreground));
    
    &:hover:not(:disabled) {
      background-color: hsl(var(--color-primary-hover));
    }
  } @else if $variant == 'secondary' {
    background-color: hsl(var(--color-secondary));
    color: hsl(var(--color-secondary-foreground));
    
    &:hover:not(:disabled) {
      background-color: hsl(var(--color-secondary-hover));
    }
  } @else if $variant == 'ghost' {
    background-color: transparent;
    color: hsl(var(--color-fg));
    border: 1px solid hsl(var(--color-border));
    
    &:hover:not(:disabled) {
      background-color: hsl(var(--color-muted));
    }
  } @else if $variant == 'outline' {
    background-color: transparent;
    color: hsl(var(--color-primary));
    border: 1px solid hsl(var(--color-primary));
    
    &:hover:not(:disabled) {
      background-color: hsl(var(--color-primary));
      color: hsl(var(--color-primary-foreground));
    }
  } @else if $variant == 'destructive' {
    background-color: hsl(var(--color-error));
    color: hsl(var(--color-error-foreground));
    
    &:hover:not(:disabled) {
      background-color: hsl(var(--color-error-hover));
    }
  }
}

/* 입력 필드 믹스인 */
@mixin input-base {
  width: 100%;
  height: var(--input-height);
  padding: var(--input-padding-y) var(--input-padding-x);
  border: 1px solid hsl(var(--color-input));
  border-radius: var(--input-border-radius);
  background-color: hsl(var(--color-bg));
  color: hsl(var(--color-fg));
  font-size: var(--font-size-sm);
  @include transition-colors;
  
  &::placeholder {
    color: hsl(var(--color-muted-foreground));
  }
  
  &:focus {
    outline: none;
    border-color: hsl(var(--color-ring));
    box-shadow: 0 0 0 3px hsl(var(--color-ring) / 0.1);
  }
  
  &:disabled {
    background-color: hsl(var(--color-muted));
    cursor: not-allowed;
    opacity: 0.6;
  }
}

@mixin input-variant($variant: 'default') {
  @if $variant == 'error' {
    border-color: hsl(var(--color-error));
    
    &:focus {
      box-shadow: 0 0 0 3px hsl(var(--color-error) / 0.1);
    }
  } @else if $variant == 'success' {
    border-color: hsl(var(--color-success));
    
    &:focus {
      box-shadow: 0 0 0 3px hsl(var(--color-success) / 0.1);
    }
  }
}

/* 테이블 믹스인 */
@mixin table-base {
  width: 100%;
  border-collapse: collapse;
}

@mixin table-cell {
  padding: var(--table-cell-padding-y) var(--table-cell-padding-x);
  text-align: left;
  border-bottom: 1px solid hsl(var(--color-border));
}

@mixin table-header {
  background-color: var(--table-header-bg);
  font-weight: var(--font-weight-semibold);
  text-transform: uppercase;
  letter-spacing: var(--letter-spacing-wide);
  font-size: var(--font-size-xs);
}

@mixin table-row-hover {
  @include transition-colors;
  
  &:hover {
    background-color: var(--table-row-hover-bg);
  }
}

/* ===== 유틸리티 믹스인 ===== */

@mixin aspect-ratio($width, $height) {
  position: relative;
  
  &::before {
    content: '';
    display: block;
    padding-top: ($height / $width) * 100%;
  }
  
  > * {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
}

@mixin scrollbar($width: 8px, $track-color: hsl(var(--color-muted)), $thumb-color: hsl(var(--color-border))) {
  &::-webkit-scrollbar {
    width: $width;
  }
  
  &::-webkit-scrollbar-track {
    background: $track-color;
  }
  
  &::-webkit-scrollbar-thumb {
    background: $thumb-color;
    border-radius: calc($width / 2);
    
    &:hover {
      background: hsl(var(--color-border-hover));
    }
  }
}

@mixin backdrop-blur($blur: 8px) {
  backdrop-filter: blur($blur);
  -webkit-backdrop-filter: blur($blur);
}

@mixin glass-effect($bg-opacity: 0.1, $border-opacity: 0.2) {
  background-color: hsl(var(--color-bg) / $bg-opacity);
  border: 1px solid hsl(var(--color-border) / $border-opacity);
  @include backdrop-blur;
} 